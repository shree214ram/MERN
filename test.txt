const newState = {};
  Object.assign(newState, state, { menuSubmenuList: action.data });
  return newState;


const menuSubmenuList = [];
  Object.assign(menuSubmenuList, state.menuSubmenuList);
  const newState = {};
  const newCurrentEmployee = [];
  const indexMenu = findIndex(menuSubmenuList.userMenu, ['id', action.menuId]);
  if (indexMenu > -1) {
    const indexSubMenu = findIndex(menuSubmenuList.userMenu[indexMenu].subMenu, ['id', action.subMenuId]);
    if (indexSubMenu > -1) {
      menuSubmenuList.userMenu[indexMenu].subMenu[indexSubMenu].checked = !menuSubmenuList.userMenu[indexMenu].subMenu[indexSubMenu].checked;
      // Checked Unchecked Filter
      if (menuSubmenuList.userMenu[indexMenu].subMenu[indexSubMenu].checked) {
        state.isChecked.push({ objectKey: action.key, objectValue: action.value });
      } else {
        remove(state.isChecked, { objectKey: action.key, objectValue: action.value });
      }
    }
  }

menuSubmenuList.userMenu[indexMenu].subMenu[indexSubMenu].checked = !menuSubmenuList.userMenu[indexMenu].subMenu[indexSubMenu].checked;


https://code.tutsplus.com/tutorials/working-with-tables-in-react-part-one--cms-29682
https://www.npmjs.com/package/react-sort-search-table
http://allenfang.github.io/react-bootstrap-table/example.html
http://jsfiddle.net/jhudson8/dahdx6eu/
http://glittershark.github.io/reactable/
http://blog.markusproject.org/?p=5860
https://github.com/glittershark/reactable
https://github.com/sematext/sematable

https://www.w3schools.com/howto/howto_js_filter_table.asp
https://www.w3schools.com/howto/howto_js_sort_table.asp


const listItems = [];
        for (let i = 0; i < LogUserMenu.length; i += 1) {
          const link = LogUserMenu[i];
          const Type = SvgComponents[link.svg];
          if (link.subMenu.length === 0) {
            listItems.push(<li className="sidebar-menu-block">
              <Link className={`sidebar-item-main ${(pathArr[0] === link.slug ? 'active' : '')}`} to={link.slug}>
                <div className="sidebar-item-icon"> <Type /> </div>
                <div className="sidebar-item-text"> {link.name} </div>
              </Link> </li>);
              
              

axios.defaults.headers.common.Authorization = `Bearer ${token}`;


----------------
import setAuthorizationToken from '../utils/setAuthorizationToken';

componentWillMount() {
    const token = localStorage.getItem('token');
    setAuthorizationToken(token);
  }

import axios from 'axios';

export default function setAuthorizationToken(token) {
  if (token) {
    axios.defaults.headers.common.Authorization = `Bearer ${token}`;
  } else {
    delete axios.defaults.headers.common.Authorization;
  }
}




import { map } from 'lodash';
map(overSightObject.overseenParties, 'id');

map(this.props.ScheduleManager.selectedProductsList, o => _pick(o, ['productId', 'subProductId', 'excluded', 'comments']));


_map(uniqeMenaOldResponse, (o) => ({ id: o.Mena_Response_Id, Mena_Response: o.Mena_Response }));



