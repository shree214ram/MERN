

axios.defaults.headers.common.Authorization = `Bearer ${token}`;


----------------
import setAuthorizationToken from '../utils/setAuthorizationToken';

componentWillMount() {
    const token = localStorage.getItem('token');
    setAuthorizationToken(token);
  }

import axios from 'axios';

export default function setAuthorizationToken(token) {
  if (token) {
    axios.defaults.headers.common.Authorization = `Bearer ${token}`;
  } else {
    delete axios.defaults.headers.common.Authorization;
  }
}




import { map } from 'lodash';
map(overSightObject.overseenParties, 'id');

map(this.props.ScheduleManager.selectedProductsList, o => _pick(o, ['productId', 'subProductId', 'excluded', 'comments']));


_map(uniqeMenaOldResponse, (o) => ({ id: o.Mena_Response_Id, Mena_Response: o.Mena_Response }));



